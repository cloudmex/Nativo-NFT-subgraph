type Market @entity{
  id: ID!
  contract: String!
  salesCount: BigInt!
  onSaleCount: BigInt!
  saleVolume: BigInt!
}

type Bid @entity {
  id: ID!
  contract: String!
  tokenId: Token!
  bidder: Profile!
  price: BigInt!
  status: String!
  timestamp: BigInt!
}

type Action @entity{
  id: ID!
  type: String!
  data: String!
  timestamp: String!
}

type Minter @entity {
  id: ID!
  contract: String!
  tokenCount: BigInt!
  collectionCount: BigInt!
  profileCount: BigInt!
}

# type Token @entity {
#   id: ID!
#   contract: String!
#   tokenId: BigInt!
#   owner_id: String!
#   title: String!
#   description: String!
#   media: String!
#   creator: String!
#   price: String!
#   onSale: Boolean!
#   extra: String!
#   approvalID: BigInt!
#   collectionID: BigInt!
#   timestamp: BigInt!
# }

type Serie @entity{
  id: ID!
  title: String!
  description: String!
  media: String!
  status: String!
  creator: String!
  price: String!
  extra: String!
  copies: BigInt!
  collectionID: BigInt!
  timestamp: BigInt!
}

type Collection @entity{
  id: ID!
  owner_id: String!
  title: String!
  description: String!
  tokenCount: BigInt!
  salesCount: BigInt!
  saleVolume: BigDecimal!
  mediaIcon: String!
  mediaBanner: String!
  collectionID: BigInt!
  timestamp: BigInt!
  visibility: Boolean!
  twitter: String!
  website: String!
}


type _Schema_
  @fulltext(
    name: "collectionSearch"
    language: es
    algorithm: proximityRank
    include: [{ entity: "Collection", fields: [{ name: "title" }, { name: "owner_id" }] }]
  )

type Notification @entity{
  id: ID!
  event: String!
  data: String!
  timestamp: BigInt!
  owner: Profile!
}

# type Profile @entity{
#   id: ID!
#   username: String!
#   media: String!
#   biography: String!
#   tokCreated: BigInt!
#   tokBought: BigInt!
#   socialMedia: String!
#   timestamp: BigInt!
#   mediaBanner: String!
# }

type Profile @entity{
  id: ID!
  username: String!
  media: String!
  biography: String!
  tokCreated: BigInt!
  tokBought: BigInt!
  socialMedia: String!
  timestamp: BigInt!
  mediaBanner: String!
  colCount: BigInt!
  tokOnSaleCount: BigInt!
  tokSoldCount: BigInt!
  tokensCreated: [Token!]! @derivedFrom(field: "creatorId")
}

type Token @entity {
  id: ID!
  contract: String!
  tokenId: BigInt!
  owner_id: String!
  title: String!
  description: String!
  media: String!
  creator: String!
  creatorId: Profile!
  price: String!
  onSale: Boolean!
  extra: String!
  approvalID: BigInt!
  collectionID: BigInt!
  timestamp: BigInt!
}